import React from 'react';
import InlineInput from './InlineInput';
import { SessionControllerEventListener } from '../controllers/SessionController';
import { ChatMessage } from '../models/ChatMessage';
import { SessionState } from '../models/SessionState';
import { TableInfo } from '../models/TableInfo';
import TableData from '../table/TableData';
interface Props {
    style?: React.CSSProperties;
    userProfilePictureStyle?: React.CSSProperties;
    userMessageStyle?: React.CSSProperties;
    assistantMessageStyle?: React.CSSProperties;
    inputStyle?: React.CSSProperties;
    sendButtonStyle?: React.CSSProperties;
}
interface State {
    user: {
        id: string;
        name: string;
    } | null;
    sessionState: SessionState;
    chatMessages: ChatMessage[];
    isProcessing: boolean;
    modalContent: TableData | null;
}
declare class AssistantView extends React.Component<Props, State> implements SessionControllerEventListener {
    inputContainerRef: React.RefObject<HTMLDivElement>;
    inputRef: React.RefObject<InlineInput>;
    scrollViewRef: React.RefObject<HTMLDivElement>;
    chatMessagesContainerRef: React.RefObject<HTMLDivElement>;
    constructor(props: Props);
    componentDidMount(): void;
    componentWillUnmount(): void;
    shouldComponentUpdate(_newProps: Readonly<Props>, _newState: Readonly<State>): boolean;
    render(): React.JSX.Element;
    getWatermarkView(): any;
    getChatMessagesView(): any;
    getInputView(): any;
    sendChatMessage(): void;
    expandTable(table: TableInfo): void;
    setUser(user: {
        id: string;
        name: string;
    }): void;
    onSessionStateUpdated(sessionState: SessionState, error: string | null): void;
    onChatMessagesUpdated(chatMessages: ChatMessage[]): void;
}
export default AssistantView;
