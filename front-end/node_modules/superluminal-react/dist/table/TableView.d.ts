import React from 'react';
import { SessionControllerEventListener } from '../controllers/SessionController';
import TableData, { MeasureInfo, RowRange, RowSlice } from './TableData';
import { TablePage } from '../models/TableInfo';
interface Props {
    table: TableData;
    style?: React.CSSProperties;
}
interface State {
    tableID: string;
    rowSlice: RowSlice;
    scrollX: number;
    scrollY: number;
    scrollViewHeight: number;
    fetchRange: RowRange | null;
}
declare class TableView extends React.Component<Props, State> implements SessionControllerEventListener {
    scrollViewRef: React.RefObject<HTMLDivElement>;
    readonly minRowHeight: number;
    static scrollbarWidth: number;
    static measureInfo: MeasureInfo;
    constructor(props: Props);
    componentDidMount(): void;
    componentWillUnmount(): void;
    onTablePageReceived(page: TablePage): void;
    shouldComponentUpdate(props: Readonly<Props>, state: Readonly<State>): boolean;
    static getDerivedStateFromProps(props: Readonly<Props>, state: Readonly<State>): Partial<State> | null;
    render(): React.JSX.Element;
    handleScrollViewportChanged(): void;
}
export default TableView;
